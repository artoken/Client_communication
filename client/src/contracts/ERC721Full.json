{
  "contractName": "ERC721Full",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/ERC-721Full.sol\":\"ERC721Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/Address.sol\":{\"keccak256\":\"0x9e2038a4e4461394feafaa948af50473913df96993bf8840c0396a918e53985e\",\"urls\":[\"bzz-raw://d98fde5f459460f890a1e161befe052dc227fbfeb6166ba86f67c44eb7ca36f6\",\"dweb:/ipfs/QmV2Dj1qkZC5h8Em2eBasnMrqGgGwXmnrWR4ZTprBSPtPE\"]},\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/Counters.sol\":{\"keccak256\":\"0xb3fcb54196b650ca47750b9a69e1b193a8a4ca5dabb805728058d2d2538ae578\",\"urls\":[\"bzz-raw://900b21e1d6d71e47b27de432e2e7c88220d3af064d20d02a71016cad290a5a19\",\"dweb:/ipfs/QmcZ1RYXQ9cwF5MWb3c84KWBhE6st1SLu2mpAUKgEL4YtU\"]},\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/ERC-721Full.sol\":{\"keccak256\":\"0x1de1fd3d65a5d5a3afaf4c77330a52713e77483e6feb50afdfcf09af13aa7a30\",\"urls\":[\"bzz-raw://43c4096931be79b359ffac43e0a9532444b055a40df95ee9c7ab7efa2ba6c6f1\",\"dweb:/ipfs/QmNbv9Y64jELPP1EvSBAfgeDaB7i4GWXv4kAAbkmmWov57\"]},\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/ERC165.sol\":{\"keccak256\":\"0x4845d8807f8f2bb5eba3e71dd4ef1d7704ebc00e6d2e899d0848d8bf82ae293a\",\"urls\":[\"bzz-raw://e7ae2952ca090c732680086949bfdbc20f2f7bb710123d10ace392215917d396\",\"dweb:/ipfs/QmNMiAePYw1UQyJhTrK3UTRVUeNUFhXVEaAzge76TkiASP\"]},\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/ERC721.sol\":{\"keccak256\":\"0x1e0aca00f0fe75687fe3714bbe8f582b481909fe1f1761beae1c1aba59a0a28b\",\"urls\":[\"bzz-raw://5cd3da9982a067aa3902f77e6addb09224e9241fd91dde4331cd4856b45ce1e6\",\"dweb:/ipfs/QmX2RKUh3VDak6yWEzCd8po8quqe7iXd96bKo1Co2vv41t\"]},\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/ERC721Metadata.sol\":{\"keccak256\":\"0x6fe9f0e57aa014d528c528f92401567c6532ec20396b620b6b21d8f9ebe6f10c\",\"urls\":[\"bzz-raw://90007234cdcbe02f099a3afa56bc5af5262e4174fada5c1f69ad2a88b8323773\",\"dweb:/ipfs/QmSZMHF3eYwdPKphR5YknkimvjXuxykPX2UcHGotgD4uha\"]},\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/IERC165.sol\":{\"keccak256\":\"0x07cd84a6c299c71330e3a33e1056ee5b2c4984b023a801feeca3932a8e42adb1\",\"urls\":[\"bzz-raw://e4b304f20423240656380e2d3b8c75a88811f1565f6931bab3aa7c5461a538ab\",\"dweb:/ipfs/QmSk5TZL17mTxq3y3Qsgw24J2kiyBKmy8QfuoQBsXcq17q\"]},\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/IERC721.sol\":{\"keccak256\":\"0x1db4df87a4efdddb3f7338b007d912b60fbf5ad95e1bed44a64a7f44e3f07b3d\",\"urls\":[\"bzz-raw://8b3c25bf08d649af9fbd32e770719596b340b40ffdfbfde37c8da65c103b53f4\",\"dweb:/ipfs/QmckfbhNFxkXjem3B5DP6Y8Xkne1AxJT7eueR2zd1q2sL6\"]},\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/IERC721Metadata.sol\":{\"keccak256\":\"0x8b1308a391ff35ea543a7825ae063af84df3397ec57a88b94d222b2644de454a\",\"urls\":[\"bzz-raw://a90ceb1cbaf901f3837edca1b12cc252ba25ab8e6dd82148d9ed61560bcb9e8b\",\"dweb:/ipfs/QmSSumrtSG3VbAC7357mFiJHKiusc9gQqqqquXJPz6ZBAq\"]},\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x4c646b667b19ff5aa7dafa09b48e31be3f64e2f40331dcc48f1a905db8abc44b\",\"urls\":[\"bzz-raw://dd86d40de6018b360c5fdeb5ad81ae0b43e6d52dbfce59f5b15e8cdf93c1ebe7\",\"dweb:/ipfs/Qmcn1PFEzEAUuwz11EFP4x2VRET6sVvZJ7bkLunb3S8sAN\"]},\"/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/SafeMath.sol\":{\"keccak256\":\"0x46cf08ec6ab47472f0af1e835184d8ef5352f22bb781318ab72b19a7b2dd40e7\",\"urls\":[\"bzz-raw://049a86410631c0a99f4b6ea96365b46521f51699e260e7f4854b1472d05beaf6\",\"dweb:/ipfs/QmT5kvMoiMYzLGhdchaWqbAv6eBiGgsbgv8zHpXAQugmgK\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80634f6ccce711610097578063a22cb46511610066578063a22cb46514610590578063b88d4fde146105e0578063c87b56dd146106e5578063e985e9c51461078c57610100565b80634f6ccce7146104055780636352211e1461044757806370a08231146104b557806395d89b411461050d57610100565b806318160ddd116100d357806318160ddd146102a957806323b872dd146102c75780632f745c591461033557806342842e0e1461039757610100565b806301ffc9a71461010557806306fdde031461016a578063081812fc146101ed578063095ea7b31461025b575b600080fd5b6101506004803603602081101561011b57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610808565b604051808215151515815260200191505060405180910390f35b61017261086f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101b2578082015181840152602081019050610197565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102196004803603602081101561020357600080fd5b8101908080359060200190929190505050610911565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102a76004803603604081101561027157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109ac565b005b6102b1610b85565b6040518082815260200191505060405180910390f35b610333600480360360608110156102dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b92565b005b6103816004803603604081101561034b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c01565b6040518082815260200191505060405180910390f35b610403600480360360608110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cc0565b005b6104316004803603602081101561041b57600080fd5b8101908080359060200190929190505050610ce0565b6040518082815260200191505060405180910390f35b6104736004803603602081101561045d57600080fd5b8101908080359060200190929190505050610d60565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104f7600480360360208110156104cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e28565b6040518082815260200191505060405180910390f35b610515610efd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561055557808201518184015260208101905061053a565b50505050905090810190601f1680156105825780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105de600480360360408110156105a657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610f9f565b005b6106e3600480360360808110156105f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561065d57600080fd5b82018360208201111561066f57600080fd5b8035906020019184600183028401116401000000008311171561069157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611142565b005b610711600480360360208110156106fb57600080fd5b81019080803590602001909291905050506111b4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610751578082015181840152602081019050610736565b50505050905090810190601f16801561077e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107ee600480360360408110156107a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112c7565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109075780601f106108dc57610100808354040283529160200191610907565b820191906000526020600020905b8154815290600101906020018083116108ea57829003601f168201915b5050505050905090565b600061091c8261135b565b610971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611eb9602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006109b782610d60565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611f3d6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a7e5750610a7d81336112c7565b5b610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180611e2e6038913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b610b9c33826113cd565b610bf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611f5e6031913960400191505060405180910390fd5b610bfc8383836114c1565b505050565b6000610c0c83610e28565b8210610c63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611d81602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610cad57fe5b9060005260206000200154905092915050565b610cdb83838360405180602001604052806000815250611142565b505050565b6000610cea610b85565b8210610d41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611f8f602c913960400191505060405180910390fd5b60078281548110610d4e57fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611e906029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610eaf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611e66602a913960400191505060405180910390fd5b610ef6600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206114e5565b9050919050565b6060600a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f955780601f10610f6a57610100808354040283529160200191610f95565b820191906000526020600020905b815481529060010190602001808311610f7857829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611041576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61114d848484610b92565b611159848484846114f3565b6111ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180611dac6032913960400191505060405180910390fd5b50505050565b60606111bf8261135b565b611214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611f0e602f913960400191505060405180910390fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112bb5780601f10611290576101008083540402835291602001916112bb565b820191906000526020600020905b81548152906001019060200180831161129e57829003601f168201915b50505050509050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006113d88261135b565b61142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611e02602c913960400191505060405180910390fd5b600061143883610d60565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806114a757508373ffffffffffffffffffffffffffffffffffffffff1661148f84610911565b73ffffffffffffffffffffffffffffffffffffffff16145b806114b857506114b781856112c7565b5b91505092915050565b6114cc8383836116dc565b6114d68382611937565b6114e08282611ad5565b505050565b600081600001549050919050565b60006115148473ffffffffffffffffffffffffffffffffffffffff16611b9c565b61152157600190506116d4565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156115fc5780820151818401526020810190506115e1565b50505050905090810190601f1680156116295780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561164b57600080fd5b505af115801561165f573d6000803e3d6000fd5b505050506040513d602081101561167557600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff166116fc82610d60565b73ffffffffffffffffffffffffffffffffffffffff1614611768576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180611ee56029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611dde6024913960400191505060405180910390fd5b6117f781611baf565b61183e600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c6d565b611885600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c90565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061198f6001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611ca690919063ffffffff16565b9050600060066000848152602001908152602001600020549050818114611a7c576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106119fc57fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611a5457fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611ace9190611d2f565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c6a5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b611c8560018260000154611ca690919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115611d1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b815481835581811115611d5657818360005260206000209182019101611d559190611d5b565b5b505050565b611d7d91905b80821115611d79576000816000905550600101611d61565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a7231582084f324a1e7391a6cd393e4c2abddbd435bfbf23c6d2e766095bc52d4e443f7bc64736f6c63430005100032",
  "sourceMap": "83:231:4:-;;;154:157;8:9:-1;5:2;;;30:1;27;20:12;5:2;154:157:4;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;154:157:4;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;154:157:4;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;154:157:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;154:157:4;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;154:157:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;231:4;237:6;740:40:5;397:10;759:20;;740:18;;;:40;;:::i;:::-;2224::6;2094:10;2243:20;;2224:18;;;:40;;:::i;:::-;14509:51;14317:10;14528:31;;14509:18;;;:51;;:::i;:::-;842:4:7;834:5;:12;;;;;;;;;;;;:::i;:::-;;867:6;857:7;:16;;;;;;;;;;;;:::i;:::-;;964:49;690:10;983:29;;964:18;;;:49;;:::i;:::-;761:260;;154:157:4;;83:231;;1487:193:5;1578:10;1563:25;;:11;:25;;;;;1555:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:4;1632:20;:33;1653:11;1632:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1487:193;:::o;83:231:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "83:231:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;83:231:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;945:135:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;945:135:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1132:85:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1132:85:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4293:204:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4293:204:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3579:421;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3579:421:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15341:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5970:290;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5970:290:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14950:232;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14950:232:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6906:134;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6906:134:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15783:199;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15783:199:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2920:228;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2920:228:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2483:211;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2483:211:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1332:89:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1332:89:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4798:248:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4798:248:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7759:268;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7759:268:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7759:268:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7759:268:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7759:268:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7759:268:6;;;;;;;;;;;;;;;:::i;:::-;;1628:205:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1628:205:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1628:205:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5376:147:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5376:147:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;945:135:5;1015:4;1039:20;:33;1060:11;1039:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1032:40;;945:135;;;:::o;1132:85:7:-;1171:13;1204:5;1197:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1132:85;:::o;4293:204:6:-;4352:7;4380:16;4388:7;4380;:16::i;:::-;4372:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4465:15;:24;4481:7;4465:24;;;;;;;;;;;;;;;;;;;;;4458:31;;4293:204;;;:::o;3579:421::-;3643:13;3659:16;3667:7;3659;:16::i;:::-;3643:32;;3700:5;3694:11;;:2;:11;;;;3686:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3778:5;3764:19;;:10;:19;;;:58;;;;3787:35;3804:5;3811:10;3787:16;:35::i;:::-;3764:58;3756:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3946:2;3919:15;:24;3935:7;3919:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3984:7;3980:2;3964:28;;3973:5;3964:28;;;;;;;;;;;;3579:421;;;:::o;15341:96::-;15385:7;15412:10;:17;;;;15405:24;;15341:96;:::o;5970:290::-;6114:39;6133:10;6145:7;6114:18;:39::i;:::-;6106:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6220:32;6234:4;6240:2;6244:7;6220:13;:32::i;:::-;5970:290;;;:::o;14950:232::-;15030:7;15066:16;15076:5;15066:9;:16::i;:::-;15058:5;:24;15050:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15148:12;:19;15161:5;15148:19;;;;;;;;;;;;;;;15168:5;15148:26;;;;;;;;;;;;;;;;15141:33;;14950:232;;;;:::o;6906:134::-;6993:39;7010:4;7016:2;7020:7;6993:39;;;;;;;;;;;;:16;:39::i;:::-;6906:134;;;:::o;15783:199::-;15841:7;15877:13;:11;:13::i;:::-;15869:5;:21;15861:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15957:10;15968:5;15957:17;;;;;;;;;;;;;;;;15950:24;;15783:199;;;:::o;2920:228::-;2975:7;2995:13;3011:11;:20;3023:7;3011:20;;;;;;;;;;;;;;;;;;;;;2995:36;;3067:1;3050:19;;:5;:19;;;;3042:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3135:5;3128:12;;;2920:228;;;:::o;2483:211::-;2538:7;2583:1;2566:19;;:5;:19;;;;2558:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2652:34;:17;:24;2670:5;2652:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2645:41;;2483:211;;;:::o;1332:89:7:-;1373:13;1406:7;1399:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1332:89;:::o;4798:248:6:-;4884:10;4878:16;;:2;:16;;;;4870:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4974:8;4937:18;:30;4956:10;4937:30;;;;;;;;;;;;;;;:34;4968:2;4937:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;5025:2;4998:40;;5013:10;4998:40;;;5029:8;4998:40;;;;;;;;;;;;;;;;;;;;;;4798:248;;:::o;7759:268::-;7866:31;7879:4;7885:2;7889:7;7866:12;:31::i;:::-;7916:48;7939:4;7945:2;7949:7;7958:5;7916:22;:48::i;:::-;7908:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7759:268;;;;:::o;1628:205:7:-;1686:13;1720:16;1728:7;1720;:16::i;:::-;1712:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1806:10;:19;1817:7;1806:19;;;;;;;;;;;1799:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1628:205;;;:::o;5376:147:6:-;5456:4;5480:18;:25;5499:5;5480:25;;;;;;;;;;;;;;;:35;5506:8;5480:35;;;;;;;;;;;;;;;;;;;;;;;;;5473:42;;5376:147;;;;:::o;8229:155::-;8286:4;8303:13;8319:11;:20;8331:7;8319:20;;;;;;;;;;;;;;;;;;;;;8303:36;;8374:1;8357:19;;:5;:19;;;;8350:26;;;8229:155;;;:::o;8754:333::-;8839:4;8864:16;8872:7;8864;:16::i;:::-;8856:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8940:13;8956:16;8964:7;8956;:16::i;:::-;8940:32;;9002:5;8991:16;;:7;:16;;;:51;;;;9035:7;9011:31;;:20;9023:7;9011:11;:20::i;:::-;:31;;;8991:51;:87;;;;9046:32;9063:5;9070:7;9046:16;:32::i;:::-;8991:87;8983:96;;;8754:333;;;;:::o;16366:245::-;16452:38;16472:4;16478:2;16482:7;16452:19;:38::i;:::-;16503:47;16536:4;16542:7;16503:32;:47::i;:::-;16563:40;16591:2;16595:7;16563:27;:40::i;:::-;16366:245;;;:::o;1080:114:3:-;1145:7;1172;:14;;;1165:21;;1080:114;;;:::o;12001:356:6:-;12123:4;12150:15;:2;:13;;;:15::i;:::-;12145:60;;12189:4;12182:11;;;;12145:60;12217:13;12249:2;12233:36;;;12270:10;12282:4;12288:7;12297:5;12233:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12233:70:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12233:70:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12233:70:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12233:70:6;;;;;;;;;;;;;;;;12217:86;;685:10;12332:16;;12322:26;;;:6;:26;;;;12314:35;;;12001:356;;;;;;;:::o;10956:459::-;11070:4;11050:24;;:16;11058:7;11050;:16::i;:::-;:24;;;11042:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11153:1;11139:16;;:2;:16;;;;11131:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11209:23;11224:7;11209:14;:23::i;:::-;11245:35;:17;:23;11263:4;11245:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11291:33;:17;:21;11309:2;11291:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11360:2;11337:11;:20;11349:7;11337:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11399:7;11395:2;11380:27;;11389:4;11380:27;;;;;;;;;;;;10956:459;;;:::o;19549:1148::-;19815:22;19840:32;19870:1;19840:12;:18;19853:4;19840:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;19815:57;;19883:18;19904:17;:26;19922:7;19904:26;;;;;;;;;;;;19883:47;;20051:14;20037:10;:28;20033:328;;20082:19;20104:12;:18;20117:4;20104:18;;;;;;;;;;;;;;;20123:14;20104:34;;;;;;;;;;;;;;;;20082:56;;20188:11;20155:12;:18;20168:4;20155:18;;;;;;;;;;;;;;;20174:10;20155:30;;;;;;;;;;;;;;;:44;;;;20305:10;20272:17;:30;20290:11;20272:30;;;;;;;;;;;:43;;;;20033:328;;20450:12;:18;20463:4;20450:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;19549:1148;;;;:::o;18373:186::-;18487:12;:16;18500:2;18487:16;;;;;;;;;;;;;;;:23;;;;18458:17;:26;18476:7;18458:26;;;;;;;;;;;:52;;;;18521:12;:16;18534:2;18521:16;;;;;;;;;;;;;;;18543:7;18521:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;18521:30:6;;;;;;;;;;;;;;;;;;;;;;18373:186;;:::o;556:422:0:-;616:4;824:12;935:7;923:20;915:28;;969:1;962:4;:8;955:15;;;556:422;;;:::o;12525:175:6:-;12625:1;12589:38;;:15;:24;12605:7;12589:24;;;;;;;;;;;;;;;;;;;;;:38;;;12585:108;;12679:1;12644:15;:24;12660:7;12644:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12585:108;12525:175;:::o;1301:110:3:-;1382:21;1401:1;1382:7;:14;;;:18;;:21;;;;:::i;:::-;1365:7;:14;;:38;;;;1301:110;:::o;1202:91::-;1284:1;1266:7;:14;;;:19;;;;;;;;;;;1202:91;:::o;1316:184:12:-;1374:7;1407:1;1402;:6;;1394:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:9;1470:1;1466;:5;1454:17;;1491:1;1484:8;;;1316:184;;;;:::o;83:231:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.16;\r\n\r\nimport './ERC721.sol';\r\nimport './ERC721Metadata.sol';\r\ncontract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {\r\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\ILYA\\Desktop\\Sirius\\art_project_auctions_and_deploy\\contracts\\ERC-721Full.sol",
  "ast": {
    "absolutePath": "/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/ERC-721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        1465
      ]
    },
    "id": 1466,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1444,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1445,
        "nodeType": "ImportDirective",
        "scope": 1466,
        "sourceUnit": 2439,
        "src": "27:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1446,
        "nodeType": "ImportDirective",
        "scope": 1466,
        "sourceUnit": 2568,
        "src": "51:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1447,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2082,
              "src": "106:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2082",
                "typeString": "contract ERC721"
              }
            },
            "id": 1448,
            "nodeType": "InheritanceSpecifier",
            "src": "106:6:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1449,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2438,
              "src": "114:16:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$2438",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1450,
            "nodeType": "InheritanceSpecifier",
            "src": "114:16:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1451,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2567,
              "src": "132:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$2567",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1452,
            "nodeType": "InheritanceSpecifier",
            "src": "132:14:4"
          }
        ],
        "contractDependencies": [
          1517,
          2082,
          2106,
          2438,
          2567,
          2577,
          2680,
          2703
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1465,
        "linearizedBaseContracts": [
          1465,
          2567,
          2703,
          2438,
          2106,
          2082,
          2680,
          1517,
          2577
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1463,
              "nodeType": "Block",
              "src": "245:66:4",
              "statements": []
            },
            "documentation": null,
            "id": 1464,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1459,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1454,
                    "src": "231:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1460,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1456,
                    "src": "237:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1461,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1458,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2567,
                  "src": "216:14:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$2567_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "216:28:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1454,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1464,
                  "src": "167:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1453,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "167:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1456,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1464,
                  "src": "187:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1455,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "166:42:4"
            },
            "returnParameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:0:4"
            },
            "scope": 1465,
            "src": "154:157:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1466,
        "src": "83:231:4"
      }
    ],
    "src": "0:314:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/ERC-721Full.sol",
      "exportedSymbols": {
        "ERC721Full": [
          1465
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ]
        },
        "id": 1444,
        "name": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "attributes": {
          "SourceUnit": 2439,
          "absolutePath": "/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/ERC721.sol",
          "file": "./ERC721.sol",
          "scope": 1466,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1445,
        "name": "ImportDirective",
        "src": "27:22:4"
      },
      {
        "attributes": {
          "SourceUnit": 2568,
          "absolutePath": "/C/Users/ILYA/Desktop/Sirius/art_project_auctions_and_deploy/contracts/ERC721Metadata.sol",
          "file": "./ERC721Metadata.sol",
          "scope": 1466,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1446,
        "name": "ImportDirective",
        "src": "51:30:4"
      },
      {
        "attributes": {
          "contractDependencies": [
            1517,
            2082,
            2106,
            2438,
            2567,
            2577,
            2680,
            2703
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1465,
            2567,
            2703,
            2438,
            2106,
            2082,
            2680,
            1517,
            2577
          ],
          "name": "ERC721Full",
          "scope": 1466
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721",
                  "referencedDeclaration": 2082,
                  "type": "contract ERC721"
                },
                "id": 1447,
                "name": "UserDefinedTypeName",
                "src": "106:6:4"
              }
            ],
            "id": 1448,
            "name": "InheritanceSpecifier",
            "src": "106:6:4"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Enumerable",
                  "referencedDeclaration": 2438,
                  "type": "contract ERC721Enumerable"
                },
                "id": 1449,
                "name": "UserDefinedTypeName",
                "src": "114:16:4"
              }
            ],
            "id": 1450,
            "name": "InheritanceSpecifier",
            "src": "114:16:4"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Metadata",
                  "referencedDeclaration": 2567,
                  "type": "contract ERC721Metadata"
                },
                "id": 1451,
                "name": "UserDefinedTypeName",
                "src": "132:14:4"
              }
            ],
            "id": 1452,
            "name": "InheritanceSpecifier",
            "src": "132:14:4"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1465,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 1464,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1453,
                        "name": "ElementaryTypeName",
                        "src": "167:6:4"
                      }
                    ],
                    "id": 1454,
                    "name": "VariableDeclaration",
                    "src": "167:18:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 1464,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1455,
                        "name": "ElementaryTypeName",
                        "src": "187:6:4"
                      }
                    ],
                    "id": 1456,
                    "name": "VariableDeclaration",
                    "src": "187:20:4"
                  }
                ],
                "id": 1457,
                "name": "ParameterList",
                "src": "166:42:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1462,
                "name": "ParameterList",
                "src": "245:0:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2567,
                      "type": "type(contract ERC721Metadata)",
                      "value": "ERC721Metadata"
                    },
                    "id": 1458,
                    "name": "Identifier",
                    "src": "216:14:4"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1454,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 1459,
                    "name": "Identifier",
                    "src": "231:4:4"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1456,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 1460,
                    "name": "Identifier",
                    "src": "237:6:4"
                  }
                ],
                "id": 1461,
                "name": "ModifierInvocation",
                "src": "216:28:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1463,
                "name": "Block",
                "src": "245:66:4"
              }
            ],
            "id": 1464,
            "name": "FunctionDefinition",
            "src": "154:157:4"
          }
        ],
        "id": 1465,
        "name": "ContractDefinition",
        "src": "83:231:4"
      }
    ],
    "id": 1466,
    "name": "SourceUnit",
    "src": "0:314:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-04-21T04:57:00.180Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.      * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}